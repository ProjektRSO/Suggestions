kumuluzee:
  name: suggestions-service
  version: 1.0.0
  env:
    name: dev
  server:
    base-url: http://localhost:8081
    http:
      port: 8081
  config:
    consul:
      agent: http://localhost:8500
  health:
    checks:
      disk-space-health-check:
        threshold: 100000000
      http-health-check:
        connection-url: https://atlas.microsoft.com/weather/forecast/daily/json?api-version=1.0
    logs:
      enabled: true
      type: readiness
      level: FINE
      period-s: 60
  metrics:
    web-instrumentation:
      - name: suggestions-endpoint
        url-pattern: /v1/suggestions/*
    servlet:
      enabled: true
      mapping: /metrics
  logs:
    config-file: '<?xml version="1.0" encoding="UTF-8"?>
                            <Configuration name="suggestions">
                                <Appenders>
                                    <Console name="console" target="SYSTEM_OUT">
                                        <PatternLayout pattern="%d %p %marker %m %X %ex %n"/>
                                    </Console>
                                    <Socket name="logstash" host="e1595967-41f2-4179-8d37-32064ea9bdfc-ls.logit.io"
                                    port="12345" protocol="udp">
                                        <JSONLayout complete="false" compact="true" eventEol="true" charset="UTF-8" properties="true"/>
                                    </Socket>
                                </Appenders>
                                <Loggers>
                                    <!-- Default logger -->
                                    <Root level="all">
                                        <AppenderRef ref="console" level="info" />
                                        <AppenderRef ref="logstash" level="trace" />
                                    </Root>
                                </Loggers>
                            </Configuration>'
  fault-tolerance:
    annotation-overrides:
      - class: si.fri.rso2021.Suggestions.api.v1.resources.SuggestionsResources
        method: makeObjectRequest
        annotation: retry
        parameters:
          max-retries: 15
rest-properties:
  maintenance-mode: false
  apikey: Aq5NNU-8Bhp2XOoXGtR4lX8sNGiXGKcrD4jnK2UqPD
  broken: false
  customersurl: http://localhost:8080/v1/customers


# docker run -d --name rso-workerdb -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=workers -p 5432:5432 postgres:13
# kumuluzee.env.name če bi bilo znotraj
# če datoteka: velike črke in podčrtaj namesto pik KUMULUZEE_ENV_NAME

# docker network create rso2021
# docker run -d --name rso-workerdb -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=workers -p 5432:5432 --network rso2021 postgres:13
# docker -p HOST:CONTAINER

# okoljske spremenljivke: v run ukazu z -e IME=vrednost
# jdbc:postgresql://worker-database:5432/workers
# KUMULUZEE_DATASOURCES0_CONNECTIONURL -> sestavljeno iz nivojev te yaml datoteke, 0 tam kjer lahko več
# docker run -d --name workers-MS -p 8080:8080 -e KUMULUZEE_DATASOURCES0_CONNECTIONURL=jdbc:postgresql://rso-workerdb:5432/workers --network rso2021 rso2021.v1

# consul agent -dev, na 8500 portu
